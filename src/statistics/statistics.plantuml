@startuml

title __STATISTICS's Class Diagram__\n

  package sase.statistics {
    class ConditionSelectivityCollector {
        {static} - instance : ConditionSelectivityCollector
        {static} - defaultSelectivity : double
        {static} - selectivityOfUnknownCondition : Double
        - counters : HashMap<String, SelectivityCounters>
        - selectivityEstimates : HashMap<String, Double>
        {static} + getInstance()
        # ConditionSelectivityCollector()
        + recordConditionEvaluation()
        + getSelectivityEstimate()
        - getKeyTransformations()
        - calculateSelectivityEstimates()
        + serializeSelectivityEstimates()
        - deserializeSelectivityEstimates()
    }
  }
  

  package sase.statistics {
    class SelectivityCounters {
        + in : int
        + out : int
        + getSelectivityEstimate()
    }
  }
  

  package sase.statistics {
    class EventRateCollector {
        - counters : HashMap<EventType, Integer>
        - timeWindow : long
        - timeWindowStart : Long
        - timeWindowsCounter : int
        + EventRateCollector()
        + recordEvent()
        + getEventRates()
    }
  }
  

  package sase.statistics {
    class Statistics {
        {static} + processingTime : String
        {static} + evaluationMechanismCreationTime : String
        {static} + computations : String
        {static} + correlationComputations : String
        {static} + aggregationComputations : String
        {static} + memoryOperations : String
        {static} + instanceCreations : String
        {static} + instanceDeletions : String
        {static} + bufferInsertions : String
        {static} + bufferRemovals : String
        {static} + events : String
        {static} + matches : String
        {static} + peakInstances : String
        {static} + peakBufferedEvents : String
        {static} + peakMemory : String
        {static} + adaptationTime : String
        {static} + numberOfAdaptations : String
        {static} + automatonStatesNumber : String
        {static} + automatonTransitionsNumber : String
        {static} + treeNodesNumber : String
        {static} + isTimeoutReached : String
        {static} + numberOfInputChanges : String
        {static} + numberOfUndetectedInputChanges : String
        {static} + numberOfFalseAdaptations : String
        {static} + averageLatency : String
        {static} + averageInputChangeDetectionTime : String
        {static} + evaluationPlanCost : String
        {static} + getDiscreteOrderedNames()
        {static} + getFractionalOrderedNames()
    }
  }
  

  package sase.statistics {
    class StatisticsManager {
        {static} - typeOfEvaluation : String
        {static} - statisticsManager : StatisticsManager
        - writer : CSVWriter
        - runDescription : String
        - discreteStatistics : HashMap<String, Long>
        - fractionalStatistics : HashMap<String, Double>
        - timeMeasurementsInProgress : HashMap<String, Long>
        {static} + getInstance()
        {static} + resetStatisticsManager()
        {static} - initializeCSVWriter()
        {static} - writeColumnsNames()
        {static} + destroy()
        {static} + attemptPeriodicUpdate()
        - StatisticsManager()
        + getRunDescription()
        + setRunDescription()
        - initializeDiscreteStatisticsHashTable()
        - initializeFractionalStatisticsHashTable()
        + updateDiscreteStatistic()
        + replaceDiscreteStatistic()
        + incrementDiscreteStatistic()
        + decrementDiscreteStatistic()
        + updateDiscreteIfBigger()
        + updateDiscreteMemoryStatistic()
        + incrementDiscreteMemoryStatistic()
        + getDiscreteStatistic()
        + updateFractionalStatistic()
        + replaceFractionalStatistic()
        + startMeasuringTime()
        + isTimeMeasuredForStatistic()
        + stopMeasuringTime()
        + recordPeakMemoryUsage()
        + reportStatistics()
        - reportStatistics()
        - preprocessFractionalStatisticValue()
        - computeAverageStatisticValue()
    }
  }
  

  ConditionSelectivityCollector +-down- SelectivityCounters


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
