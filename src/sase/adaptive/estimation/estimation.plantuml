@startuml

title __ESTIMATION's Class Diagram__\n

  package sase.sase.adaptive.estimation {
    class ExponentialHistogramsCounter {
        - buckets : List<Bucket>
        - sum : int
        - counter : long
        - windowSize : long
        - maxBucketsOfSameSize : int
        + ExponentialHistogramsCounter()
        - mergeBuckets()
        + addElement()
        - validateTimeWindow()
        + getSumEstimate()
        + getRateEstimate()
        + getNumberOfRecordedElements()
        + getWindowSize()
        + setWindowSize()
    }
  }
  

  package sase.sase.adaptive.estimation {
    class Bucket {
        - size : int
        - timestamp : long
        + Bucket()
        # Bucket()
        + getSize()
        + getTimestamp()
        + merge()
    }
  }
  

  package sase.sase.adaptive.estimation {
    interface IEventArrivalRateEstimator {
        {abstract} + registerEventArrival()
        {abstract} + getEventRateEstimate()
    }
  }
  

  package sase.sase.adaptive.estimation {
    class SlidingWindowEventArrivalRateEstimator {
        {static} - defaultEventTypeRate : double
        - estimators : List<EventRateEstimator>
        - recordedEventsLowerBound : long
        + SlidingWindowEventArrivalRateEstimator()
        + registerEventArrival()
        + getEventRateEstimate()
    }
  }
  

  package sase.sase.adaptive.estimation {
    class EventRateEstimator {
        + type : EventType
        + estimator : ExponentialHistogramsCounter
        + EventRateEstimator()
    }
  }
  

  package sase.sase.adaptive.estimation {
    class SlidingWindowSelectivityEstimator {
        {static} - defaultSelectivity : double
        - estimators : HashMap<AtomicCondition, ExponentialHistogramsCounter>
        - windowSize : long
        - maxError : double
        + SlidingWindowSelectivityEstimator()
        + registerConditionVerification()
        - calculateWindowSizeForCondition()
        - getConditionReachProbability()
        + getSelectivityEstimate()
        + recalculateWindowSizes()
    }
  }
  

  package sase.sase.adaptive.estimation {
    class StaticEventArrivalRateEstimator {
        + registerEventArrival()
        + getEventRateEstimate()
    }
  }
  

  ExponentialHistogramsCounter +-down- Bucket
  SlidingWindowEventArrivalRateEstimator -up-|> IEventArrivalRateEstimator
  SlidingWindowEventArrivalRateEstimator +-down- EventRateEstimator
  StaticEventArrivalRateEstimator -up-|> IEventArrivalRateEstimator


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
