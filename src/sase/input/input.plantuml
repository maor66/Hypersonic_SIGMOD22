@startuml

title __INPUT's Class Diagram__\n

  package sase.sase.input {
    abstract class EventProducer {
        - converter : EventTypesConverter
        - modifier : IEventStreamModifier
        - pendingEvents : List<Event>
        # EventProducer()
        # produceActualEvents()
        + getNextEvent()
        + hasMoreEvents()
        {abstract} # createMoreEvents()
        {abstract} # canCreateMoreEvents()
        {abstract} + finish()
    }
  }
  

  package sase.sase.input {
    class EventProducerFactory {
        {static} + createEventProducer()
    }
  }
  

  package sase.sase.input {
    enum EventProducerTypes {
      SYNTHETIC
      FILE_BASED
    }
  }
  

  package sase.sase.input {
    class EventStreamModifierFactory {
        {static} + createEventStreamModifier()
    }
  }
  

  package sase.sase.input {
    enum EventStreamModifierTypes {
      NONE
      RAREST_TYPE
      TYPE_SHUFFLE
      SYNTHETIC
    }
  }
  

  package sase.sase.input {
    abstract class EventTypesConverter {
        # workloadSpecification : WorkloadSpecification
        + EventTypesConverter()
        {abstract} + convertToKnownEventType()
    }
  }
  

  package sase.sase.input {
    enum EventTypesConverterTypes {
      STOCK_BY_INDUSTRY_MEGA_LARGE_COMPANY
      STOCK_BY_REGION
      STOCK_BY_COMPANY
      TRAM_CONGESTION
      SPEEDD_TRAFFIC
      SPEEDD_CREDIT_CARD_FRAUD
      SYNTHETIC
      TRAFFIC_SPEED_VEHICLES_NUMBER
    }
  }
  

  package sase.sase.input {
    interface IEventStreamModifier {
        {abstract} + produceModifiedEvents()
    }
  }
  



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
