@startuml

title __CREATORS's Class Diagram__\n

  package sase.sase.user.stocks {
    package sase.sase.user.stocks.sase.specification {
      package sase.sase.user.stocks.sase.specification.creators {
        class CorrelationSelectivityEstimationSetupCreator {
            {static} - minCorrelationLimit : double
            {static} - maxCorrelationLimit : double
            {static} - numberOfSteps : int
            {static} - timeWindow : long
            # getEventTypeNames()
            # createSpecificationsForEventTypePair()
        }
      }
    }
  }
  

  package sase.sase.user.stocks {
    package sase.sase.user.stocks.sase.specification {
      package sase.sase.user.stocks.sase.specification.creators {
        class DeltaSelectivityEstimationSetupCreator {
            # getEventTypeNames()
            # createSpecificationsForEventTypePair()
        }
      }
    }
  }
  

  package sase.sase.user.stocks {
    package sase.sase.user.stocks.sase.specification {
      package sase.sase.user.stocks.sase.specification.creators {
        class StockCorrelationConditionCreator {
            + createDoubleEventCondition()
            + createIteratedEventCondition()
        }
      }
    }
  }
  

  package sase.sase.user.stocks {
    package sase.sase.user.stocks.sase.specification {
      package sase.sase.user.stocks.sase.specification.creators {
        class StockDeltaConditionCreator {
            + createDoubleEventCondition()
            + createIteratedEventCondition()
        }
      }
    }
  }
  

  package sase.sase.user.stocks {
    package sase.sase.user.stocks.sase.specification {
      package sase.sase.user.stocks.sase.specification.creators {
        class StockMultiPatternSpecificationCreator {
            # createWorkloadSpecifications()
            - createWorkloadSpecification()
            - generateEventTypeSources()
            - createNewPattern()
            - createStructure()
            - getCandidateEventTypes()
            - createRandomPatternSize()
            - determineSlaVerifierType()
            - addConditions()
            - getRandomElements()
            - getSpecificationWithoutCondition()
            - getEventTypesForPattern()
            - containsIdenticalPattern()
            - generateEventTypesForPattern()
            - getRandomSubset()
            - balancedMerge()
            - getRandomEventTypes()
            - violatesMaxPeerNumberConstraint()
            - getPeersNumber()
            - getPeers()
            - isPeer()
            - getMaxRefinedIntersection()
        }
      }
    }
  }
  

  package sase.sase.user.stocks {
    package sase.sase.user.stocks.sase.specification {
      package sase.sase.user.stocks.sase.specification.creators {
        enum StockEventTypeSources {
          HIGH_ONLY
          MEDIUM_ONLY
          LOW_ONLY
          HIGH_AND_MEDIUM
          MEDIUM_AND_LOW
          ALL
        }
      }
    }
  }
  

  package sase.sase.user.stocks {
    package sase.sase.user.stocks.sase.specification {
      package sase.sase.user.stocks.sase.specification.creators {
        class StockPatternSpecificationCreator {
            {static} # filteredEventTypes : String[]
            + StockPatternSpecificationCreator()
            # createPatternType()
            # createPatternStructure()
            - createSequencePatternStructure()
            - containsUnboundedSpecialEventType()
            # createNegatedEventTypes()
            # createIteratedEventTypes()
            - createSpecialEventTypes()
            - createConjunctionPatternStructure()
            - createDisjunctionPatternStructure()
        }
      }
    }
  }
  

  StockCorrelationConditionCreator -up-|> IConditionSpecificationCreator
  StockDeltaConditionCreator -up-|> IConditionSpecificationCreator
  StockMultiPatternSpecificationCreator -up-|> ISimulationSpecificationCreator
  StockMultiPatternSpecificationCreator +-down- StockEventTypeSources


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
