@startuml

title __TIME's Class Diagram__\n

  package sase.pattern {
    package sase.pattern.condition {
      package sase.pattern.condition.time {
        class EventTemporalPositionCondition {
            - targetEventType : EventType
            - precedingEventTypes : List<EventType>
            - succeedingEventTypes : List<EventType>
            + EventTemporalPositionCondition()
            + getTargetEventType()
            + getPrecedingEventTypes()
            + getSucceedingEventTypes()
            - getEventByType()
            - isEarlier()
            # actuallyVerify()
            + getActualPrecedingEvent()
            + getActualSucceedingEvent()
            + toString()
            # getConditionKey()
            + getSelectivity()
            # shouldIgnoreSelectivityMeasurements()
            + equals()
            + hashCode()
        }
      }
    }
  }
  

  package sase.pattern {
    package sase.pattern.condition {
      package sase.pattern.condition.time {
        class GlobalTemporalOrderCondition {
            {static} - createTimingConstraints()
            {static} + getPatternTemporalConstraintsForOrder()
            + GlobalTemporalOrderCondition()
            - hasOrderConditionForPair()
            - reduceRedundantConditions()
            + getPositionConstraintsByOrder()
            + getPositionConstraintsForType()
        }
      }
    }
  }
  

  package sase.pattern {
    package sase.pattern.condition {
      package sase.pattern.condition.time {
        class PairTemporalOrderCondition {
            + PairTemporalOrderCondition()
            # verifyDoubleEvent()
            + toString()
            + equals()
            + hashCode()
            # getConditionKey()
            + getSelectivity()
        }
      }
    }
  }
  



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
