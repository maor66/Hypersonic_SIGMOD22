@startuml

title __MONITORING's Class Diagram__\n

  package sase.adaptive.monitoring {
    class AdaptationNecessityDetectorFactory {
        {static} + createAdaptationNecessityDetector()
    }
  }
  

  package sase.adaptive.monitoring {
    enum AdaptationNecessityDetectorTypes {
      NONE
      TRIVIAL
      INVARIANT
      RECOMPUTE
      PERFORMANCE
      CONSTANT_THRESHOLD
    }
  }
  

  package sase.adaptive.monitoring {
    class ConstantThresholdAdaptationNecessityDetector {
        - lastKnownEventRates : HashMap<EventType, Double>
        - lastKnownConditionSelectivities : HashMap<AtomicCondition, Double>
        - eventTypeToPattern : HashMap<EventType, Set<CompositePattern>>
        - conditionToPattern : HashMap<AtomicCondition, Set<CompositePattern>>
        - deviatedTypes : Set<EventType>
        - deviatedConditions : Set<AtomicCondition>
        - threshold : Double
        + ConstantThresholdAdaptationNecessityDetector()
        - registerEventTypes()
        - registerConditions()
        + shouldAdapt()
        + getAffectedPatterns()
    }
  }
  

  package sase.adaptive.monitoring {
    interface IAdaptationNecessityDetector {
        {abstract} + shouldAdapt()
    }
  }
  

  package sase.adaptive.monitoring {
    interface IMultiPatternAdaptationNecessityDetector {
        {abstract} + getAffectedPatterns()
    }
  }
  

  package sase.adaptive.monitoring {
    class PerformanceDeltaAdaptationNecessityDetector {
        - currentNumberOfProcessedEvents : long
        - lastTotalNumberOfProcessedEvents : long
        - minThroughputDifferenceRatio : double
        + PerformanceDeltaAdaptationNecessityDetector()
        + shouldAdapt()
    }
  }
  

  package sase.adaptive.monitoring {
    class PlanCreatorBasedAdaptationNecessityDetector {
        - pattern : Pattern
        - evaluationPlan : EvaluationPlan
        + PlanCreatorBasedAdaptationNecessityDetector()
        + shouldAdapt()
    }
  }
  

  package sase.adaptive.monitoring {
    class TrivialAdaptationNecessityDetector {
        + shouldAdapt()
    }
  }
  

  ConstantThresholdAdaptationNecessityDetector -up-|> IMultiPatternAdaptationNecessityDetector
  PerformanceDeltaAdaptationNecessityDetector -up-|> IAdaptationNecessityDetector
  PlanCreatorBasedAdaptationNecessityDetector -up-|> IAdaptationNecessityDetector
  TrivialAdaptationNecessityDetector -up-|> IAdaptationNecessityDetector


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
